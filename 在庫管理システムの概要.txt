在庫管理システムの作成

・概要
アイテムの名前と数をデータベースに記録することができる
アカウントに名前とユーザーIDとパスワードを入力することでアカウントを作成することができる
ユーザーIDとパスワードを入力することでログインすることができる
ログインしなければ在庫管理ページに移ることはできない
ログインすることによって在庫一覧表と新しくデータを登録するフォームがあるページに移動し
アイテムの名前をクリックすることで更新ページへ飛べる
削除ボタンをクリックする事でデータの削除が可能
更新ページでは名前と数の変更が可能

・設計
・DB
テーブル
items
カラム
ID(int)(pri)(auto_increment)
name(varchar)
number(varchar)
newDate(Datetime)

テーブル
useracount
カラム
userID(varchar)(pri)
password(varchar)
newDate(Datetime)

・jspファイル
toppage.jsp
トップページ、ログインまたはアカウントの作成へのリンクがある

makeacount.jsp
アカウントを作るためにユーザー情報を登録するフォーム

makeacountresult.jsp
アカウントの作成が完了しトップ画面へ戻るためのリンクがあるページ

itemlist.jsp
itemsに登録されたアイテム一覧が表示され名前をクリックすると更新ページへ
削除をクリックすると削除確認ページへ飛べる。また新たなデータを挿入する
ためのフォームもここに配置されている

itemupdate.jsp
アイテム情報を更新するためのフォームがあるページ

itemupdateconfirm.jsp
更新する情報の確認画面

updateresult.jsp
更新が完了しトップ画面または在庫一覧ページへのリンクがついている

deleteconfirm.jsp
削除してもよいか確認するページ

deleteresult.jsp
削除が完了しトップ画面または在庫一覧ページへのリンクがついている

・サーブレットファイル
MakeAcount.java
makeacount.jspから受け取った情報をデータベースに登録するサーブレット

Rogincheck.java
toppage.jspで入力したIDとパスワードがデータベースに登録されているものと一致すれば
itemsテーブルの全てのデータを取得してitemlist.jspへフォワードするサーブレット

Additem.java
itemlist.jspでフォームに入力されたアイテム情報をデータベースに登録しRogincheck.javaへフォワード

ItemUpdate.java
アイテム一覧の名前をクリックする事でそのアイテムのIDがここに渡されIDを使って検索をかけ
そのアイテムの全カラムをDTOに挿入しitemupdate.jspへフォワード

ItemUpdateConfirm.java
itemupdate.jspで入力された値をDTOに挿入しitemupdateconfirmへフォワード

UpdateResult.java
データベースでアイテム更新の処理をしupdateresult.jspへフォワード

DeleteConfirm.java
ItemUpdateと同じようにIDで削除するアイテムの情報をDTOに挿入しdeleteconfirm.jspへフォワード

Delete.java
削除の処理を実行しdeleteresult.jspへフォワード

Rogout.java
セッションを削除しtoppage.jspへフォワード

・その他
DBManager.java
DBへ接続する処理が記述されたクラス

DAO.java
DBを利用した処理を行うメソッドが記述されたクラス

DTO.java
ユーザーやアイテムの情報をもちまわるためのクラス
DBへの挿入もこのクラスを用いて行っている

error.jsp
エラーが起きたらここに飛び不正なアクセスであればトップ画面、すでにログインしていれば在庫一覧ページへ飛ぶ